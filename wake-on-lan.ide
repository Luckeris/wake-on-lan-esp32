#include <WiFi.h>
#include <WebServer.h>
#include <WiFiUdp.h>

const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";
uint8_t macAddress[] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF }; // Target PC MAC

WebServer server(80);
WiFiUDP udp;

void sendWOL() {
  const int wolPort = 9;
  byte magicPacket[102];
  memset(magicPacket, 0xFF, 6);
  for (int i = 1; i <= 16; i++) {
    memcpy(&magicPacket[i * 6], macAddress, 6);
  }
  udp.beginPacket("255.255.255.255", wolPort);
  udp.write(magicPacket, sizeof(magicPacket));
  udp.endPacket();
}

String getHTML() {
  String html = R"rawliteral(
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ESP32 PC Control</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      margin: 0;
      font-family: 'Poppins', sans-serif;
      background-color: #2d2d2d;
      color: white;
      text-align: center;
      padding: 20px;
      box-sizing: border-box;
    }
    .container {
      background-color: rgba(0, 0, 0, 0.85);
      padding: 30px;
      border-radius: 15px;
      max-width: 400px;
      margin: 50px auto;
      box-sizing: border-box;
    }
    h1 {
      font-size: 1.8em;
      margin-bottom: 10px;
    }
    button {
      width: 100%;
      padding: 15px;
      font-size: 1.1em;
      border: none;
      border-radius: 10px;
      margin: 10px 0;
      font-weight: bold;
      cursor: pointer;
      transition: 0.3s;
    }
    .on {
      background-color: #28a745;
      color: white;
    }
    .on:hover {
      background-color: #218838;
    }
    .restart {
      background-color: #ffc107;
      color: black;
    }
    .restart:hover {
      background-color: #e0a800;
    }
    .icon {
      font-size: 40px;
    }
    @media only screen and (max-width: 600px) {
      body { padding: 10px; }
      .container { padding: 20px; margin: 20px auto; width: 90%; }
      h1 { font-size: 1.6em; }
      button { font-size: 1em; padding: 12px; }
    }
    .lkrs-hidden-token {
      position: fixed;
      bottom: 5px;
      right: 10px;
      font-size: 10px;
      color: rgba(255, 255, 255, 0.1);
      pointer-events: none;
      user-select: none;
      z-index: 9999;
    }
  </style>
  <script>
    setTimeout(() => { location.reload(); }, 30000);
    function checkSysHook() {
      const hook = document.getElementById("sys-hook");
      if (!hook || hook.innerText.trim() !== "luckeris Â©") {
        document.body.innerHTML = "<h1 style='color:red;text-align:center;'>Site broken: unauthorized edit</h1>";
      }
    }
    window.onload = checkSysHook;
  </script>
</head>
<body>
  <div class="container">
    <div class="icon">ðŸ’»</div>
    <h1>Control Your PC</h1>
    <form action="/on" method="GET">
      <button class="on">Turn On PC</button>
    </form>
    <form action="/restart" method="GET">
      <button class="restart">Restart ESP32</button>
    </form>
  </div>
  <div id="sys-hook" class="lkrs-hidden-token">luckeris Â©</div>
</body>
</html>
)rawliteral";
  return html;
}

void handleRoot() {
  server.send(200, "text/html; charset=UTF-8", getHTML());
}

void handleOn() {
  sendWOL();
  server.send(200, "text/html; charset=UTF-8", R"rawliteral(
<html><head>
  <meta charset="UTF-8">
  <meta http-equiv='refresh' content='3;url=/' />
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #222;
      color: white;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      flex-direction: column;
      text-align: center;
    }
    .check {
      font-size: 60px;
      color: #28a745;
    }
  </style>
</head>
<body>
  <div class='check'>âœ…</div>
  <h2>Sending Wake-on-LAN Packet...</h2>
  <p>You will be redirected in 3 seconds.</p>
</body></html>)rawliteral");
}

void handleRestart() {
  server.send(200, "text/html; charset=UTF-8", R"rawliteral(
<html><head>
  <meta charset="UTF-8">
  <meta http-equiv='refresh' content='3;url=/' />
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #111;
      color: white;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      flex-direction: column;
      text-align: center;
    }
    .check {
      font-size: 60px;
      color: #ffc107;
    }
  </style>
</head>
<body>
  <div class='check'>ðŸ”„</div>
  <h2>Restarting ESP32...</h2>
  <p>You will be redirected in 3 seconds.</p>
</body></html>)rawliteral");
  delay(1000);
  ESP.restart();
}

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected!");
  Serial.println(WiFi.localIP());

  udp.begin(9);
  server.on("/", handleRoot);
  server.on("/on", handleOn);
  server.on("/restart", handleRestart);
  server.begin();
}

void loop() {
  server.handleClient();
}
